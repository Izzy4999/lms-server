// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String   @unique
  password   String?
  role       String   @default("user")
  isVerified Boolean  @default(false)
  avatar     Avatar?
  courses    Course[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

type CoursesData {
  id             String
  videoUrl       String
  videoThumbnail Json
  title          String
  description    String
  videoSection   String
  videoLength    Float
  videoPlayer    String
  suggestion     String
  link           Link[]
  questions      Questions[]
  createdAt      DateTime    @default(now())
}

model Courses {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String
  price          Float
  estimatedPrice Float?
  thumbnail      Thumbnail
  tags           String
  levels         String
  demoUrl        String
  benefits       Benefit[]
  prerequisites  Benefit[]
  reviews        Review[]
  courseData     CoursesData[]
  ratings        Float         @default(0)
  purchased      Int           @default(0)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Order {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  courseId     String
  userId       String
  payment_info Json?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Notification {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  message   String
  status    String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Layout {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  type        String
  faq         FaqItem[]
  categories  Category[]
  banner      Banner
}

model Banner {
  image       BannerImage
  title       String
  description String
}

model FaqItem {
  question  String
  answer    String
  createdAt DateTime @default(now())
}

model Category {
  title String
}

model BannerImage {
  public_id String
  url       String
}

type Review {
  id             String
  user           Json
  rating         Float    @default(0)
  comment        String
  commentReplies Json[]
  createdAt      DateTime @default(now())
}

type Link {
  title String
  url   String
}

type Comment {
  id             String
  user           Json
  comment        String
  commentReplies Json[]
  createdAt      DateTime @default(now())
}

type Questions {
  id              String
  user            Json
  question        String
  questionReplies Json[]
  createdAt       DateTime @default(now())
}

type Benefit {
  title String
}

type Avatar {
  public_id String
  url       String
}

type Thumbnail {
  public_id String
  url       String
}

type Course {
  courseId String
}
